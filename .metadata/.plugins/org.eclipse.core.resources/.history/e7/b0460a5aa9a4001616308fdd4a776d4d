// Cody Leung APCS1 ArraysLab3

package arrays_materials;

import java.util.Arrays;
import java.util.List;

public class ArraysLab3 
{
	/*
	 * Write a method named sum that accepts two arrays of integers arr1 and arr2 
	 * and returns an array of integers, 
	 * in which every element is the sum of the elements at that index for the arrays arr1 and arr2. 
	 * You can assume arrays arr1 and arr2 have at least one element each and are the same length.
	 */
	public static int[] sum(int[] arr1, int[] arr2) {
		assert (arr1.length > 0);
		assert (arr2.length > 0);
		assert (arr1.length == arr2.length);
			int [] sum = new int[arr1.length];
		for (int y= 0; y < arr1.length -1 ; y ++ ) {	
			sum[y] = arr1[y] + arr2[y]; 
		}
		return sum;
	}
	
	/*
	 * Write a method named append that accepts an array of integers arr of length n 
	 * and an integer num, and returns an array of integers of length n+1 
	 * that consists of the elements of arr with num appended to the end.  
	 * You can assume array arr has at least one element.
	 */
	public static int[] append(int[] arr, int num) {
		assert (arr.length > 0);
		int[] arr3 = new int[arr.length + 1];	
		arr3[arr3.length-1] = num; 
		return arr3;
	}
	
	/*
	 * Write a method named remove that accepts an array of integers arr and an integer idx 
	 * and returns an array of integers consisting of all of the elements of arr 
	 * except for the element at index idx (thus, the returned array has a length of arr.length – 1).  
	 * You can assume arr has at least two elements.
	 */
	public static int[] remove(int[] arr, int idx)
	{
		assert (arr.length >= 2);
		
		int[] arr3 = new int[arr.length - 1];
		for (int i = 0; i < idx; i++){
			arr3[i] = arr[i];
		}
		for (int i = idx + 1; i <= arr.length-1; i++){
			arr3[i-1] = arr[i];
		}
		return arr3;
	}
	
	/*
	 * Write a method sumEven that accepts an array of integers arr 
	 * and returns an integer containing the sum of the elements at the even indices of arr.  
	 * (That means elements at indices 0,2,4,6,8.)  You can assume arr has at least one element.
	 */
	public static int sumEven(int[] arr) {
		assert (arr.length > 0);
		int evens = 0;
		for(int i = 0; i < arr.length; i++)
		{
			if(arr[i] % 2 == 0)
				evens = evens + arr[i];
		}
		return evens;
	}
	
	/*
	 * Write a method rotateRight that accepts an array of integers arr 
	 * and does not return a value.  
	 * The rotateRight method moves each element of arr one index to the right 
	 * (element 0 goes to element 1, element 1 goes to element 2, …, element n-1 goes to element 0).  
	 * You can assume arr has at least one element.
	 */
	public static void rotateRight(int[] arr)
	{
		assert (arr.length > 0);
		int last = arr[arr.length - 1];
		for (int i = 0; i < arr.length - 1; i++) {
			arr[i] = arr[i-1];
		}
		arr[0] = last;
	}
// Main
	public static void main(String[] args) {
		int[] a = {5,10,15,20,25};
		
		int[] b = {7,14,21,28,35,42,49,56};
		
			System.out.println(Arrays.toString(sum(a,b)));
		
			System.out.println(Arrays.toString(append(a,1)));
		
			System.out.println(Arrays.toString(remove(a,2)));
		
			System.out.println(sumEven(a));
	}
}